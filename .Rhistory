liberal.1951 <- subset(data, data$liberal == 1 & data$year == 1951, na.rm=TRUE)
data.1952 <- subset(data, data$year == 1952, na.rm=TRUE)
liberal.1952 <- subset(data, data$liberal == 1 & data$year == 1952, na.rm=TRUE)
nrow(liberal.1950) / nrow(data.1950)
nrow(liberal.1951) / nrow(data.1951)
nrow(liberal.1952) / nrow(data.1952)
data.drafted <- subset(data, data$draft == 1)
data.drafted
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
diffrnc <- fdiff[2] - fidff[1]
return(diffrnc)
}
avg_treatment_eff(data)
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
diffrnc <- fdiff[2] - fdiff[1]
return(diffrnc)
}
avg_treatment_eff(data)
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
fdiff
diffrnc <- fdiff[2] - fdiff[1]
return(diffrnc)
}
avg_treatment_eff(data)
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
return(fdiff)
diffrnc <- fdiff[2] - fdiff[1]
}
avg_treatment_eff(data)
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
diffrnc <- fdiff[2] - fdiff[1]
return(diffrnc)
}
avg_treatment_eff(data)
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
diffrnc <- fdiff[2] - fdiff[1]
return(diffrnc)
}
data
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
diffrnc <- fdiff[2] - fdiff[1]
return(diffrnc)
}
data.colo <- subset(data, data$state == "CO")
data.oreg <- subset(data, data$state == "OR")
avg_treatment_eff(data.colo)
avg_treatment_eff(data.oreg)
avg_treatment_eff <- function(data) {
fdiff <- tapply(data$liberal, data$draft, mean, na.rm=TRUE)
diffrnc <- fdiff[2] - fdiff[1]
return(diffrnc)
}
avg_treatment_eff(data)
data.colo <- subset(data, data$state == "CO")
data.oreg <- subset(data, data$state == "OR")
avg_treatment_eff(data.colo)
avg_treatment_eff(data.oreg)
knitr::opts_chunk$set(echo = FALSE) # notice, echo=FALSE
setwd("D:/university/SOC321/PS3")
# load libraries:
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE) # notice, echo=FALSE
setwd("D:/university/SOC321/PS3")
# load libraries:
library(tidyverse)
data <- read.csv("blackturnout.csv")
data
data <- read.csv("blackturnout.csv")
data
data <- read.csv("blackturnout.csv")
data
unique(data$year)
unique(data$state)
data <- read.csv("blackturnout.csv")
data
unique(data$year)
unique(data$state)
boxplot(formula = turnout ~ candidate, data = data)
boxplot(formula = turnout ~ candidate, data = data, xlab="Presence of Co-Ethnic Candidate",
ylab="Proportion of Voter Turnout")
boxplot(formula = turnout ~ candidate, data = data, xlab="Presence of Co-Ethnic Candidate",
ylab="Proportion of Voter Turnout", names = c("No Candidate", "Candidate"))
boxplot(formula = turnout ~ candidate, data = data, xlab="Presence of Co-Ethnic Candidate",
ylab="Proportion of Voter Turnout", names = c("No Candidate", "Candidate"),
title = "Election Turnut Comparison")
boxplot(formula = turnout ~ candidate, data = data, xlab="Presence of Co-Ethnic Candidate",
ylab="Proportion of Voter Turnout", names = c("No Candidate", "Candidate"))
lm(turnout ~ candidate, data = data)
plot(data$CVAP, data$turnout, color = data$candidate)
plot(data$CVAP, data$turnout, col = data$candidate)
plot(data$CVAP, data$turnout)
plot(data$CVAP, data$turnout, col = data$candidate)
plot(data$CVAP, data$turnout, palette = c("red", "cyan"), col = data$candidate)
scatterplot(CVAP ~ turnout | candidate, data = data, col = c("red", "cyan"))
ggplot(data, aes(x=CVAP, y=turnout, color=candidate)) +
geom_point() +
scale_color_brewer(palette = c("red", "cyan"))
ggplot(data, aes(x=CVAP, y=turnout, color=candidate)) +
geom_point() +
scale_color_brewer(palette = "Set2")
knitr::opts_chunk$set(echo = FALSE) # notice, echo=FALSE
setwd("D:/university/SOC321/PS3")
# load libraries:
library(tidyverse)
library(ggplot2)
ggplot(data, aes(x=CVAP, y=turnout, color=candidate)) +
geom_point() +
scale_color_brewer(palette = "Set2")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate))) +
geom_point() +
scale_color_brewer(palette = "Set2")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate), ylab = "Black Voter Turnout")) +
geom_point() +
scale_color_brewer(palette = "Set2")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate), ylab = "Black Voter Turnout")) +
geom_point() +
scale_color_brewer(palette = "Set2")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate))) +
geom_point() +
scale_color_brewer(palette = "Set2") +
labs(ylab = "Black Voter Turnout")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate))) +
geom_point() +
scale_color_brewer(palette = "Set2") +
labs(ylab = "Black Voter Turnout")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate))) +
geom_point() +
scale_color_brewer(palette = "Set2") +
labs(y = "Black Voter Turnout")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate))) +
geom_point() +
scale_color_brewer(palette = "Set2") +
labs(y = "Black Voter Turnout", color = "Presence of Candidate")
ggplot(data, aes(x=CVAP, y=turnout, color=as.factor(candidate))) +
geom_point() +
scale_color_brewer(palette = "Set2", labels = c("No Candidate", "Candidate")) +
labs(y = "Black Voter Turnout", color = "Presence of Candidate")
lm(turnout ~ candidate + CVAP, data = data)
lm(turnout ~ candidate + CVAP, data = data)
lm(turnout ~ candidate + CVAP, data = data)
binom.test(0, 3, p=0.5, conf.level = 0.95)
setwd("D:/university/SOC321/proj/321MovieProject")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/university/SOC321/PS2")
# load libraries:
library(tidyverse)
library(ggplot2)
library(dplyr)
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/university/SOC321/PS2")
# load libraries:
library(tidyverse)
library(ggplot2)
library(dplyr)
library(plotly)
# load data:
data <- read.csv("netflix_titles.csv")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/university/SOC321/proj/321MovieProject")
# load libraries:
library(tidyverse)
library(ggplot2)
library(dplyr)
library(plotly)
# load data:
data <- read.csv("netflix_titles.csv")
gdp_data <- read.csv("CountryIncomeBrakcets.csv")
gdp_data$country = gdp_data$TableName
merged_data <- data %>% left_join(gdp_data)
merged_data <- merged_data %>% rowwise() %>% mutate(Drama = ifelse(("Dramas" %in% listed_in) | ("TV Dramas" %in% listed_in), 1, 0))
merged_data <- merged_data %>% rowwise() %>% mutate(Comedy = ifelse(("Comedies" %in% listed_in) | ("TV Comedies" %in% listed_in), 1, 0))
merged_data <- merged_data %>% rowwise() %>% mutate(Action = ifelse(("Action & Adventure" %in% listed_in) | ("TV Action & Adventure" %in% listed_in), 1, 0))
merged_data <- merged_data %>% filter(!is.na(IncomeGroup) & IncomeGroup != "")
drama_data_set <- merged_data %>% mutate(Drama1 = grepl("Dramas", listed_in))
comedy_data_set <- merged_data %>% mutate(Comedy1 = grepl("Comedies", listed_in))
action_data_set <- merged_data %>% mutate(Action1 = grepl("Action & Adventure", listed_in))
drama_plot <- ggplot(drama_data_set, mapping = aes(x = IncomeGroup, fill = Drama1)) +
geom_bar() +
theme_classic() +
labs(title = "Proportion of Drama Movies and TV shows by Income Group", x = "Income Group", y = "Total Number of Movies Produced", fill = "Genre = Drama")
ggplotly(drama_plot)
comedy_plot <- ggplot(comedy_data_set, mapping = aes(x = IncomeGroup, fill = Comedy1)) +
geom_bar() +
theme_classic() +
labs(title = "Proportion of Comedy Movies and TV shows by Income Group",x = "Income Group", y = "Total Number of Movies Produced", fill = "Genre = Comedy")
ggplotly(comedy_plot)
action_plot <- ggplot(action_data_set, mapping = aes(x = IncomeGroup, fill = Action1)) +
geom_bar() +
theme_classic() +
labs(title = "Proportion of Action Movies and TV shows by Income Group", x = "Income Group", y = "Total Number of Movies Produced", fill = "Genre = Action")
ggplotly(action_plot)
US_data_set <- drama_data_set %>% filter(TableName == "United States")
Nigeria_data_set <- drama_data_set %>% filter(TableName == "Nigeria")
India_data_set <- drama_data_set %>% filter(TableName == "India")
UK_data_set <- drama_data_set %>% filter(TableName == "United Kingdom")
US_drama_proportion <- table(US_data_set$Drama1)
Nigeria_drama_proportion <- table(Nigeria_data_set$Drama1)
India_drama_proportion <- table(India_data_set$Drama1)
UK_drama_proportion <- table(UK_data_set$Drama1)
(US_drama_proportion[2] / (US_drama_proportion[1] + US_drama_proportion[2]))
(Nigeria_drama_proportion[2] / (Nigeria_drama_proportion[1] + Nigeria_drama_proportion[2]))
(India_drama_proportion[2] / (India_drama_proportion[1] + India_drama_proportion[2]))
(UK_drama_proportion[2] / (UK_drama_proportion[1] + UK_drama_proportion[2]))
US_data_set1 <- comedy_data_set %>% filter(TableName == "United States")
Nigeria_data_set1 <- comedy_data_set %>% filter(TableName == "Nigeria")
India_data_set1 <- comedy_data_set %>% filter(TableName == "India")
UK_data_set1 <- comedy_data_set %>% filter(TableName == "United Kingdom")
US_comedy_proportion <- table(US_data_set1$Comedy1)
Nigeria_comedy_proportion <- table(Nigeria_data_set1$Comedy1)
India_comedy_proportion <- table(India_data_set1$Comedy1)
UK_comedy_proportion <- table(UK_data_set1$Comedy1)
(US_comedy_proportion[2] / (US_comedy_proportion[1] + US_comedy_proportion[2]))
(Nigeria_comedy_proportion[2] / (Nigeria_comedy_proportion[1] + Nigeria_comedy_proportion[2]))
(India_comedy_proportion[2] / (India_comedy_proportion[1] + India_comedy_proportion[2]))
(UK_comedy_proportion[2] / (UK_comedy_proportion[1] + UK_comedy_proportion[2]))
datax <- read_csv("netflix_titles.csv") %>%
mutate(year = release_year) %>%
filter(country %in% c("United States","India","United Kingdom"))
gdpchange <- read_csv("gdpchange.csv") %>%
filter(country %in% c("United States","India","United Kingdom"))  %>%
pivot_longer(GDP_1960:GDP_2021, names_to = "year", values_to = "gdp") %>%
mutate(year = as.numeric(str_sub(year, 5L, -1L))) %>%
select(-`2022`)
mergeddata <- datax %>%
left_join(gdpchange)
usa <- mergeddata %>% filter(country == "United States")
summary(usa$gdp)
usa <- usa %>%
mutate(GDPcategory = case_when(gdp <1.667 ~ 1,
between(gdp, 1.667, 2.288)~ 2,
between(gdp, 2.288, 2.945)~ 3,
TRUE ~ 4 ))
lowestquartileUSA <- usa %>%
filter(GDPcategory == 1)
rating_counts <- lowestquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts)
rating_counts %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
secondquartileUSA <- usa %>%
filter(GDPcategory == 2)
rating_counts2 <- secondquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts2)
rating_counts2 %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
thirdquartileUSA <- usa %>%
filter(GDPcategory == 3)
rating_counts3 <- thirdquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts3)
rating_counts3 %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
fourthquartileUSA <- usa %>%
filter(GDPcategory == 4)
rating_counts4 <- fourthquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts4)
rating_counts4 %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/university/SOC321/proj/321MovieProject")
# load libraries:
library(tidyverse)
library(ggplot2)
library(dplyr)
library(plotly)
# load data:
data <- read.csv("netflix_titles.csv")
gdp_data <- read.csv("CountryIncomeBrakcets.csv")
lowestquartileUSA <- usa %>%
filter(GDPcategory == 1)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/university/SOC321/proj/321MovieProject")
# load libraries:
library(tidyverse)
library(ggplot2)
library(dplyr)
library(plotly)
# load data:
data <- read.csv("netflix_titles.csv")
gdp_data <- read.csv("CountryIncomeBrakcets.csv")
gdp_data$country = gdp_data$TableName
merged_data <- data %>% left_join(gdp_data)
merged_data <- merged_data %>% rowwise() %>% mutate(Drama = ifelse(("Dramas" %in% listed_in) | ("TV Dramas" %in% listed_in), 1, 0))
merged_data <- merged_data %>% rowwise() %>% mutate(Comedy = ifelse(("Comedies" %in% listed_in) | ("TV Comedies" %in% listed_in), 1, 0))
merged_data <- merged_data %>% rowwise() %>% mutate(Action = ifelse(("Action & Adventure" %in% listed_in) | ("TV Action & Adventure" %in% listed_in), 1, 0))
merged_data <- merged_data %>% filter(!is.na(IncomeGroup) & IncomeGroup != "")
drama_data_set <- merged_data %>% mutate(Drama1 = grepl("Dramas", listed_in))
comedy_data_set <- merged_data %>% mutate(Comedy1 = grepl("Comedies", listed_in))
action_data_set <- merged_data %>% mutate(Action1 = grepl("Action & Adventure", listed_in))
drama_plot <- ggplot(drama_data_set, mapping = aes(x = IncomeGroup, fill = Drama1)) +
geom_bar() +
theme_classic() +
labs(title = "Proportion of Drama Movies and TV shows by Income Group", x = "Income Group", y = "Total Number of Movies Produced", fill = "Genre = Drama")
ggplotly(drama_plot)
comedy_plot <- ggplot(comedy_data_set, mapping = aes(x = IncomeGroup, fill = Comedy1)) +
geom_bar() +
theme_classic() +
labs(title = "Proportion of Comedy Movies and TV shows by Income Group",x = "Income Group", y = "Total Number of Movies Produced", fill = "Genre = Comedy")
ggplotly(comedy_plot)
action_plot <- ggplot(action_data_set, mapping = aes(x = IncomeGroup, fill = Action1)) +
geom_bar() +
theme_classic() +
labs(title = "Proportion of Action Movies and TV shows by Income Group", x = "Income Group", y = "Total Number of Movies Produced", fill = "Genre = Action")
ggplotly(action_plot)
US_data_set <- drama_data_set %>% filter(TableName == "United States")
Nigeria_data_set <- drama_data_set %>% filter(TableName == "Nigeria")
India_data_set <- drama_data_set %>% filter(TableName == "India")
UK_data_set <- drama_data_set %>% filter(TableName == "United Kingdom")
US_drama_proportion <- table(US_data_set$Drama1)
Nigeria_drama_proportion <- table(Nigeria_data_set$Drama1)
India_drama_proportion <- table(India_data_set$Drama1)
UK_drama_proportion <- table(UK_data_set$Drama1)
(US_drama_proportion[2] / (US_drama_proportion[1] + US_drama_proportion[2]))
(Nigeria_drama_proportion[2] / (Nigeria_drama_proportion[1] + Nigeria_drama_proportion[2]))
(India_drama_proportion[2] / (India_drama_proportion[1] + India_drama_proportion[2]))
(UK_drama_proportion[2] / (UK_drama_proportion[1] + UK_drama_proportion[2]))
US_data_set1 <- comedy_data_set %>% filter(TableName == "United States")
Nigeria_data_set1 <- comedy_data_set %>% filter(TableName == "Nigeria")
India_data_set1 <- comedy_data_set %>% filter(TableName == "India")
UK_data_set1 <- comedy_data_set %>% filter(TableName == "United Kingdom")
US_comedy_proportion <- table(US_data_set1$Comedy1)
Nigeria_comedy_proportion <- table(Nigeria_data_set1$Comedy1)
India_comedy_proportion <- table(India_data_set1$Comedy1)
UK_comedy_proportion <- table(UK_data_set1$Comedy1)
(US_comedy_proportion[2] / (US_comedy_proportion[1] + US_comedy_proportion[2]))
(Nigeria_comedy_proportion[2] / (Nigeria_comedy_proportion[1] + Nigeria_comedy_proportion[2]))
(India_comedy_proportion[2] / (India_comedy_proportion[1] + India_comedy_proportion[2]))
(UK_comedy_proportion[2] / (UK_comedy_proportion[1] + UK_comedy_proportion[2]))
datax <- read_csv("netflix_titles.csv") %>%
mutate(year = release_year) %>%
filter(country %in% c("United States","India","United Kingdom"))
gdpchange <- read_csv("gdpchange.csv") %>%
filter(country %in% c("United States","India","United Kingdom"))  %>%
pivot_longer(GDP_1960:GDP_2021, names_to = "year", values_to = "gdp") %>%
mutate(year = as.numeric(str_sub(year, 5L, -1L))) %>%
select(-`2022`)
mergeddata <- datax %>%
left_join(gdpchange)
usa <- mergeddata %>% filter(country == "United States")
summary(usa$gdp)
usa <- usa %>%
mutate(GDPcategory = case_when(gdp <1.667 ~ 1,
between(gdp, 1.667, 2.288)~ 2,
between(gdp, 2.288, 2.945)~ 3,
TRUE ~ 4 ))
lowestquartileUSA <- usa %>%
filter(GDPcategory == 1)
rating_counts <- lowestquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts)
rating_counts %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
secondquartileUSA <- usa %>%
filter(GDPcategory == 2)
rating_counts2 <- secondquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts2)
rating_counts2 %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
thirdquartileUSA <- usa %>%
filter(GDPcategory == 3)
rating_counts3 <- thirdquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts3)
rating_counts3 %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
fourthquartileUSA <- usa %>%
filter(GDPcategory == 4)
rating_counts4 <- fourthquartileUSA %>%
count(rating) %>%
mutate(percentage = n / sum(n)*100)
print(rating_counts4)
rating_counts4 %>%
rename(Percentage = percentage) %>%
mutate(pct_label = paste0(round(Percentage, 1), "%")) %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Percentage, y= rating,
fill = rating, label = pct_label)) +
geom_col() +
geom_text(hjust = -0.75) +
scale_x_continuous(limits = c(0, 40))
combined_plot <- combined_counts %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Quartile, y = n, fill = Quartile)) +
geom_col(position = "dodge") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Percentage of Total Rating Counts per Rating by Quartile",
x = "Quartile", y = "Count") +
facet_wrap(~ rating, scales = "free", ncol = 3) +
theme_bw() +
scale_y_continuous(expand = expansion(mult = c(0.1, 1.0))) +
theme(text = element_text(size = 8))
combined_counts <- bind_rows(
data.frame(Quartile = "1", rating_counts),
data.frame(Quartile = "2", rating_counts2),
data.frame(Quartile = "3", rating_counts3),
data.frame(Quartile = "4", rating_counts4)
)
combined_plot <- combined_counts %>%
mutate(rating = factor(rating,
levels = c("G","TV-G","TV-Y",
"TV-Y7","PG","TV-PG",
"PG-13","TV-14", "R","TV-MA", "NR","UR"))) %>%
ggplot(aes(x = Quartile, y = n, fill = Quartile)) +
geom_col(position = "dodge") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_dodge(width = 0.9),
vjust = -0.5) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Percentage of Total Rating Counts per Rating by Quartile",
x = "Quartile", y = "Count") +
facet_wrap(~ rating, scales = "free", ncol = 3) +
theme_bw() +
scale_y_continuous(expand = expansion(mult = c(0.1, 1.0))) +
theme(text = element_text(size = 8))
combined_plot
